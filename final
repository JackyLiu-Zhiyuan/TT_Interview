# input = [7,3,20,5,15,1,11,8,10]
# input = [10,20,10]
# input = [2,1,4,2,4,1]
# input = [1,2,4,8,16]

def eatCandies(input):
    dictionary = {}
    sum_so_far = 0
    for i in range(len(input)):
        sum_so_far += input[i]
        dictionary[sum_so_far] = i

    print(dictionary)

    reverse_sum_so_far = 0
    max_count = 0
    for i in range(len(input)-1,-1,-1):
        reverse_sum_so_far += input[i]
        if reverse_sum_so_far in dictionary and i > dictionary[reverse_sum_so_far]:
            forward_index = dictionary[reverse_sum_so_far]
            backward_index = i
            # print(forward_index)
            # print(backward_index)
            count = forward_index + 1 + len(input)-backward_index
            max_count = max(count,max_count)
    return max_count




MinSwap:



input = [4,3,2,1]

def minSwaps(arr):
    ans = 0
    length = len(arr)
    temp = arr.copy()
    temp.sort()
    for i in range(length):
        if arr[i] != temp[i]:
            ans += 1
            swap(arr, i,indexOf(arr, temp[i]))

    return ans


def swap(array, i, j):
    array[i],array[j] = array[j],array[i]


def indexOf(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1

print(minSwaps(input))



Processing Tasks:

input = [[1,3,2],[2,5,3],[5,6,2]]
def process(input):
    visited = set()
    for element in input:
        start, end, period = element
        for i in range(start,end+1):
            if i in visited:
                period -= 1
        while period != 0:
            visited.add(end)
            end -= 1
            period -= 1
    print(visited)

    return len(visited)






























